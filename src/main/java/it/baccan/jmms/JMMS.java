/*
 * JMMS.java
 *
 * Created on 11 settembre 2003, 13.15
 */
package it.baccan.jmms;

// API Ericsson
import com.ericsson.services.mms.sdk.vasp.api.*;

// Calendar
import com.margaglione.calendar.*;

// Calendario
import com.margaglione.calendar.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Z-MBACC
 */
public class JMMS extends javax.swing.JDialog {

    /**
     * Creates new form JMMS
     *
     * @param parent
     * @param modal
     */
    public JMMS(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        oFrom = new javax.swing.JTextField();
        oTo = new javax.swing.JTextField();
        oCC = new javax.swing.JTextField();
        oBCC = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        oSubject = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        oPriority = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        oLinkID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        oMessageClass = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        oTransactionID = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        oAllowAdaptation = new javax.swing.JCheckBox();
        oAllowCancel = new javax.swing.JCheckBox();
        oAllowReverseCharging = new javax.swing.JCheckBox();
        oAllowSenderVisibility = new javax.swing.JCheckBox();
        oDeliveryReport = new javax.swing.JCheckBox();
        oReadReport = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        oSmil = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        oAttach = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        oSubmissionTime = new javax.swing.JTextField();
        oTimeofExpiry = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        oRelativeEarliestDeliveryTime = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        oRelativeTimeofExpiry = new javax.swing.JTextField();
        oCalendar = new com.margaglione.calendar.JCalendar();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        oEarliestDeliveryTime = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        oUser = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        oPassword = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        oApplicationName = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        oApplicationProviderName = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        oServiceCode = new javax.swing.JTextField();
        oReportAddress = new javax.swing.JTextField();
        oMMCAddress = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        oLog = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        oText = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setTitle("MMS sender");
        setBackground(new java.awt.Color(204, 204, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        oTab.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        oTab.setMinimumSize(new java.awt.Dimension(500, 220));
        oTab.setPreferredSize(new java.awt.Dimension(510, 220));

        jPanel1.setLayout(null);

        jLabel1.setText("TO");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 40, 14, 13);

        jLabel2.setText("CC");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 70, 13, 13);

        jLabel3.setText("BCC");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 100, 60, 13);

        oFrom.setToolTipText("Address comma separated");
        jPanel1.add(oFrom);
        oFrom.setBounds(110, 10, 370, 19);

        oTo.setToolTipText("Address comma separated");
        jPanel1.add(oTo);
        oTo.setBounds(110, 40, 370, 19);

        oCC.setToolTipText("Address comma separated");
        jPanel1.add(oCC);
        oCC.setBounds(110, 70, 370, 19);

        oBCC.setToolTipText("Address comma separated");
        jPanel1.add(oBCC);
        oBCC.setBounds(110, 100, 370, 19);

        jLabel7.setText("From");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 10, 24, 13);

        jLabel15.setText("Subject");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(10, 140, 34, 13);
        jPanel1.add(oSubject);
        oSubject.setBounds(110, 140, 370, 19);

        oTab.addTab("Message", jPanel1);

        jPanel2.setLayout(null);

        jLabel4.setText("Priority");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(10, 10, 80, 13);

        oPriority.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "normalPriority", "highPriority", "lowPriority" }));
        jPanel2.add(oPriority);
        oPriority.setBounds(190, 10, 230, 19);

        jLabel8.setText("LinkID");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(10, 70, 80, 13);
        jPanel2.add(oLinkID);
        oLinkID.setBounds(190, 70, 270, 19);

        jLabel9.setText("MessageClass");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 40, 64, 13);

        oMessageClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "informationalClass", "personalClass", "advertisementClass" }));
        jPanel2.add(oMessageClass);
        oMessageClass.setBounds(190, 40, 210, 19);

        jLabel16.setText("TransactionId");
        jPanel2.add(jLabel16);
        jLabel16.setBounds(10, 100, 62, 13);
        jPanel2.add(oTransactionID);
        oTransactionID.setBounds(190, 100, 200, 19);

        oTab.addTab("Optional Parameters", jPanel2);

        jPanel3.setLayout(null);

        oAllowAdaptation.setText("AllowAdaptations");
        jPanel3.add(oAllowAdaptation);
        oAllowAdaptation.setBounds(10, 10, 170, 21);

        oAllowCancel.setText("AllowCancel");
        jPanel3.add(oAllowCancel);
        oAllowCancel.setBounds(10, 50, 150, 21);

        oAllowReverseCharging.setText("AllowReverseCharging");
        jPanel3.add(oAllowReverseCharging);
        oAllowReverseCharging.setBounds(10, 90, 200, 21);

        oAllowSenderVisibility.setSelected(true);
        oAllowSenderVisibility.setText("AllowSenderVisibility");
        jPanel3.add(oAllowSenderVisibility);
        oAllowSenderVisibility.setBounds(10, 130, 210, 21);

        oDeliveryReport.setText("DeliveryReport");
        jPanel3.add(oDeliveryReport);
        oDeliveryReport.setBounds(270, 10, 160, 21);

        oReadReport.setText("ReadReport");
        jPanel3.add(oReadReport);
        oReadReport.setBounds(270, 40, 93, 21);

        oTab.addTab("Flag", jPanel3);

        jPanel4.setLayout(null);

        jLabel14.setText("SMIL");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(10, 20, 22, 13);
        jPanel4.add(oSmil);
        oSmil.setBounds(70, 20, 340, 19);

        jButton2.setText("Load SMIL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2);
        jButton2.setBounds(430, 20, 140, 21);

        jLabel19.setText("Attach");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(10, 100, 29, 13);

        oAttach.setToolTipText("Files comma separated");
        jPanel4.add(oAttach);
        oAttach.setBounds(70, 100, 340, 19);

        jButton3.setText("Load attach");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);
        jButton3.setBounds(430, 100, 140, 21);

        oTab.addTab("SMIL - Attach", jPanel4);

        jPanel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jPanel5.setLayout(null);

        oSubmissionTime.setToolTipText("");
        oSubmissionTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                oSubmissionTimeFocusGained(evt);
            }
        });
        oSubmissionTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                oSubmissionTimeKeyReleased(evt);
            }
        });
        jPanel5.add(oSubmissionTime);
        oSubmissionTime.setBounds(130, 50, 200, 19);

        oTimeofExpiry.setToolTipText("");
        oTimeofExpiry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                oTimeofExpiryFocusGained(evt);
            }
        });
        oTimeofExpiry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                oTimeofExpiryKeyReleased(evt);
            }
        });
        jPanel5.add(oTimeofExpiry);
        oTimeofExpiry.setBounds(130, 80, 200, 19);

        jLabel17.setText("TimeofExpiry");
        jPanel5.add(jLabel17);
        jLabel17.setBounds(10, 80, 59, 13);

        jLabel18.setText("SubmissionTime");
        jPanel5.add(jLabel18);
        jLabel18.setBounds(10, 50, 130, 13);

        jLabel5.setText("EarliestDeliveryTime");
        jPanel5.add(jLabel5);
        jLabel5.setBounds(10, 20, 140, 13);

        jLabel10.setText("RelativeEarliestDeliveryTime");
        jPanel5.add(jLabel10);
        jLabel10.setBounds(10, 110, 170, 13);
        jPanel5.add(oRelativeEarliestDeliveryTime);
        oRelativeEarliestDeliveryTime.setBounds(180, 110, 50, 19);

        jLabel11.setText("RelativeTimeofExpiry");
        jPanel5.add(jLabel11);
        jLabel11.setBounds(10, 140, 160, 13);

        oRelativeTimeofExpiry.setToolTipText("Number of seconds");
        jPanel5.add(oRelativeTimeofExpiry);
        oRelativeTimeofExpiry.setBounds(180, 140, 50, 19);
        jPanel5.add(oCalendar);
        oCalendar.setBounds(390, 10, 190, 170);

        jLabel27.setText("in seconds");
        jPanel5.add(jLabel27);
        jLabel27.setBounds(240, 110, 90, 13);

        jLabel28.setText("in seconds");
        jPanel5.add(jLabel28);
        jLabel28.setBounds(240, 140, 70, 13);

        jButton4.setText("Get");
        jButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton4);
        jButton4.setBounds(340, 20, 40, 20);

        jButton5.setText("Get");
        jButton5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5);
        jButton5.setBounds(340, 50, 40, 20);

        jButton6.setText("Get");
        jButton6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6);
        jButton6.setBounds(340, 80, 40, 20);

        oEarliestDeliveryTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                oEarliestDeliveryTimeFocusGained(evt);
            }
        });
        oEarliestDeliveryTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                oEarliestDeliveryTimeKeyReleased(evt);
            }
        });
        jPanel5.add(oEarliestDeliveryTime);
        oEarliestDeliveryTime.setBounds(130, 20, 200, 19);

        oTab.addTab("Date", jPanel5);

        jPanel6.setLayout(null);

        jLabel20.setText("UserName");
        jPanel6.add(jLabel20);
        jLabel20.setBounds(10, 10, 47, 13);
        jPanel6.add(oUser);
        oUser.setBounds(80, 10, 130, 19);

        jLabel21.setText("Password");
        jPanel6.add(jLabel21);
        jLabel21.setBounds(230, 10, 44, 13);
        jPanel6.add(oPassword);
        oPassword.setBounds(310, 10, 140, 20);

        jLabel22.setText("ApplicationName");
        jPanel6.add(jLabel22);
        jLabel22.setBounds(10, 40, 76, 13);
        jPanel6.add(oApplicationName);
        oApplicationName.setBounds(170, 40, 280, 19);

        jLabel23.setText("ApplicationProviderName");
        jPanel6.add(jLabel23);
        jLabel23.setBounds(10, 70, 114, 13);
        jPanel6.add(oApplicationProviderName);
        oApplicationProviderName.setBounds(170, 70, 280, 19);

        jLabel24.setText("Report Address");
        jPanel6.add(jLabel24);
        jLabel24.setBounds(10, 130, 70, 13);

        jLabel25.setText("MMCAddress");
        jPanel6.add(jLabel25);
        jLabel25.setBounds(10, 160, 59, 13);
        jPanel6.add(oServiceCode);
        oServiceCode.setBounds(170, 100, 280, 19);
        jPanel6.add(oReportAddress);
        oReportAddress.setBounds(170, 130, 280, 19);
        jPanel6.add(oMMCAddress);
        oMMCAddress.setBounds(170, 160, 280, 19);

        jLabel12.setText("ServiceCode");
        jPanel6.add(jLabel12);
        jLabel12.setBounds(10, 100, 140, 13);

        oTab.addTab("Server", jPanel6);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(oLog);

        jPanel7.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        oTab.addTab("Log", jPanel7);

        getContentPane().add(oTab, java.awt.BorderLayout.NORTH);

        jScrollPane2.setViewportView(oText);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, java.awt.BorderLayout.SOUTH);

        jMenu1.setText("Menu");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Save As");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator1);

        jMenuItem3.setText("Close");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("?");

        jMenuItem5.setText("About");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(600, 500));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void oTimeofExpiryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oTimeofExpiryFocusGained
        // Add your handling code here:
        setoCalendar(oTimeofExpiry.getText());
    }//GEN-LAST:event_oTimeofExpiryFocusGained

    private void oSubmissionTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oSubmissionTimeFocusGained
        // Add your handling code here:
        setoCalendar(oSubmissionTime.getText());
    }//GEN-LAST:event_oSubmissionTimeFocusGained

    private void oEarliestDeliveryTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oEarliestDeliveryTimeFocusGained
        // Add your handling code here:
        setoCalendar(oEarliestDeliveryTime.getText());
    }//GEN-LAST:event_oEarliestDeliveryTimeFocusGained

    private void oTimeofExpiryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oTimeofExpiryKeyReleased
        // Add your handling code here:
        setoCalendar(oTimeofExpiry.getText());
    }//GEN-LAST:event_oTimeofExpiryKeyReleased

    private void oSubmissionTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oSubmissionTimeKeyReleased
        // Add your handling code here:
        setoCalendar(oSubmissionTime.getText());
    }//GEN-LAST:event_oSubmissionTimeKeyReleased

    private void oEarliestDeliveryTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oEarliestDeliveryTimeKeyReleased
        // Add your handling code here:
        setoCalendar(oEarliestDeliveryTime.getText());
    }//GEN-LAST:event_oEarliestDeliveryTimeKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Add your handling code here:
        oTimeofExpiry.setText("" + oCalendar.getCalendarModel().getCalendar().getTimeInMillis());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Add your handling code here:
        oEarliestDeliveryTime.setText("" + oCalendar.getCalendarModel().getCalendar().getTimeInMillis());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Add your handling code here:
        oSubmissionTime.setText("" + oCalendar.getCalendarModel().getCalendar().getTimeInMillis());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // Add your handling code here:
        oMMSFile = null;
        jMenuItem2ActionPerformed(null);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setMultiSelectionEnabled(true);
        int opt = jf.showOpenDialog(this); ///PARENT here should be a component relative to which you'll open the file chooser
        if (opt == JFileChooser.APPROVE_OPTION) {
            File file[] = jf.getSelectedFiles();
            String cFiles = "";
            for (int i = 0; i < file.length; i++) {
                if (i > 0) {
                    cFiles += ",";
                }
                cFiles += file[i].getAbsolutePath();
            }
            oAttach.setText(cFiles);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f != null) {
                    if (f.isDirectory()) {
                        return true;
                    }
                    if (f.getAbsolutePath().endsWith(".smil")) {
                        return true;
                    }
                }
                return false;
            }

            @Override
            public String getDescription() {
                return ("SMIL files");
            }
        });
        int opt = jf.showOpenDialog(this); ///PARENT here should be a component relative to which you'll open the file chooser
        if (opt == JFileChooser.APPROVE_OPTION) {
            File oSmilF = jf.getSelectedFile();
            oSmil.setText(oSmilF.getAbsolutePath());
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // Add your handling code here:
        javax.swing.JOptionPane.showMessageDialog(null, "MMS Sender\nby Matteo Baccan baccan@infomedia.it");
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // Add your handling code here:
        closeDialog(null);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Add your handling code here:
        try {
            String cFile = "";
            if (oMMSFile == null) {
                cFile = javax.swing.JOptionPane.showInputDialog(this, "MMS FileName");
            }

            if (oMMSProp == null) {
                oMMSProp = new Properties();
            }
            oMMSProp.setProperty("oFrom", oFrom.getText());
            oMMSProp.setProperty("oTo", oTo.getText());
            oMMSProp.setProperty("oCC", oCC.getText());
            oMMSProp.setProperty("oBCC", oBCC.getText());
            oMMSProp.setProperty("oSubject", oSubject.getText());
            oMMSProp.setProperty("oText", oText.getText());
            oMMSProp.setProperty("oPriority", "" + oPriority.getSelectedItem());
            oMMSProp.setProperty("oMessageClass", "" + oMessageClass.getSelectedItem());
            oMMSProp.setProperty("oRelativeTimeofExpiry", oRelativeTimeofExpiry.getText());
            oMMSProp.setProperty("oLinkID", oLinkID.getText());
            oMMSProp.setProperty("oRelativeEarliestDeliveryTime", oRelativeEarliestDeliveryTime.getText());
            oMMSProp.setProperty("oTransactionID", oTransactionID.getText());
            oMMSProp.setProperty("oUser", oUser.getText());
            oMMSProp.setProperty("oPassword", oPassword.getText());
            oMMSProp.setProperty("oApplicationName", oApplicationName.getText());
            oMMSProp.setProperty("oApplicationProviderName", oApplicationProviderName.getText());
            oMMSProp.setProperty("oServiceCode", oServiceCode.getText());
            oMMSProp.setProperty("oReportAddress", oReportAddress.getText());
            oMMSProp.setProperty("oMMCAddress", oMMCAddress.getText());
            oMMSProp.setProperty("oAllowAdaptation", "" + oAllowAdaptation.isSelected());
            oMMSProp.setProperty("oAllowCancel", "" + oAllowCancel.isSelected());
            oMMSProp.setProperty("oAllowReverseCharging", "" + oAllowReverseCharging.isSelected());
            oMMSProp.setProperty("oAllowSenderVisibility", "" + oAllowSenderVisibility.isSelected());
            oMMSProp.setProperty("oDeliveryReport", "" + oDeliveryReport.isSelected());
            oMMSProp.setProperty("oReadReport", "" + oReadReport.isSelected());
            oMMSProp.setProperty("oEarliestDeliveryTime", oEarliestDeliveryTime.getText());
            oMMSProp.setProperty("oSubmissionTime", oSubmissionTime.getText());
            oMMSProp.setProperty("oTimeofExpiry", oTimeofExpiry.getText());
            oMMSProp.setProperty("oAttach", oAttach.getText());
            oMMSProp.setProperty("oSmil", oSmil.getText());

            if (oMMSFile == null) {
                oMMSProp.store(new FileOutputStream(cFile), null);
            } else {
                oMMSProp.store(new FileOutputStream(oMMSFile), null);
            }
        } catch (IOException e) {
            append("" + e);
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private File oMMSFile = null;
    private Properties oMMSProp = null; //new Properties();
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f != null) {
                    if (f.isDirectory()) {
                        return true;
                    }
                    if (f.getAbsolutePath().endsWith(".mms")) {
                        return true;
                    }
                }
                return false;
            }

            @Override
            public String getDescription() {
                return ("MMS properties");
            }
        });
        int opt = jf.showOpenDialog(this); ///PARENT here should be a component relative to which you'll open the file chooser
        if (opt == JFileChooser.APPROVE_OPTION) {
            oMMSFile = jf.getSelectedFile();
        }

        if (oMMSFile != null) {
            // Read properties file.
            oMMSProp = new Properties();
            try {
                oMMSProp.load(new FileInputStream(oMMSFile));
                oFrom.setText(oMMSProp.getProperty("oFrom", ""));
                oTo.setText(oMMSProp.getProperty("oTo", ""));
                oCC.setText(oMMSProp.getProperty("oCC", ""));
                oBCC.setText(oMMSProp.getProperty("oBCC", ""));
                oSubject.setText(oMMSProp.getProperty("oSubject", ""));
                oText.setText(oMMSProp.getProperty("oText", ""));
                oPriority.setSelectedItem(oMMSProp.getProperty("oPriority", ""));
                oMessageClass.setSelectedItem(oMMSProp.getProperty("oMessageClass", ""));
                oRelativeTimeofExpiry.setText(oMMSProp.getProperty("oRelativeTimeofExpiry", ""));
                oLinkID.setText(oMMSProp.getProperty("oLinkID", ""));
                oRelativeEarliestDeliveryTime.setText(oMMSProp.getProperty("oRelativeEarliestDeliveryTime", ""));
                oTransactionID.setText(oMMSProp.getProperty("oTransactionID", ""));
                oUser.setText(oMMSProp.getProperty("oUser", ""));
                oPassword.setText(oMMSProp.getProperty("oPassword", ""));
                oApplicationName.setText(oMMSProp.getProperty("oApplicationName", ""));
                oApplicationProviderName.setText(oMMSProp.getProperty("oApplicationProviderName", ""));
                oServiceCode.setText(oMMSProp.getProperty("oServiceCode", ""));
                oReportAddress.setText(oMMSProp.getProperty("oReportAddress", ""));
                oMMCAddress.setText(oMMSProp.getProperty("oMMCAddress", ""));
                oAllowAdaptation.setSelected(oMMSProp.getProperty("oAllowAdaptation", "true").equalsIgnoreCase("true"));
                oAllowCancel.setSelected(oMMSProp.getProperty("oAllowCancel", "true").equalsIgnoreCase("true"));
                oAllowReverseCharging.setSelected(oMMSProp.getProperty("oAllowReverseCharging", "false").equalsIgnoreCase("true"));
                oAllowSenderVisibility.setSelected(oMMSProp.getProperty("oAllowSenderVisibility", "true").equalsIgnoreCase("true"));
                oDeliveryReport.setSelected(oMMSProp.getProperty("oDeliveryReport", "true").equalsIgnoreCase("true"));
                oReadReport.setSelected(oMMSProp.getProperty("oReadReport", "true").equalsIgnoreCase("true"));
                oEarliestDeliveryTime.setText(oMMSProp.getProperty("oEarliestDeliveryTime", (new Date()).toString()));
                oSubmissionTime.setText(oMMSProp.getProperty("oSubmissionTime", ""));
                oTimeofExpiry.setText(oMMSProp.getProperty("oTimeofExpiry", ""));
                oAttach.setText(oMMSProp.getProperty("oAttach", ""));
                oSmil.setText(oMMSProp.getProperty("oSmil", ""));

            } catch (IOException e) {
                append("" + e);
            }

        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add your handling code here:
        //javax.swing.JOptionPane.showMessageDialog(null, "Sei pronto per questa mirabile avventura?");
        oTab.setSelectedIndex(6);
        append("Start sending message");

        /*
         * Create Multi Media Message
         */
        MultiMediaMessage msg = new MultiMediaMessage();
        msg.setAllowAdaptations(oAllowAdaptation.isSelected());
        msg.setAllowCancel(oAllowCancel.isSelected());
        msg.setAllowReverseCharging(oAllowReverseCharging.isSelected());
        msg.setAllowSenderVisibility(oAllowSenderVisibility.isSelected());
        msg.setDeliveryReport(oDeliveryReport.isSelected());
        msg.setReadReport(oReadReport.isSelected());

        // Testo
        if (oText.getText().length() > 0) {
            msg.setFreeText(oText.getText());
        }

        // Indirizzi multipli
        if (oTo.getText().length() > 0) {
            String[] aTo = StringToArray(oTo.getText(), ",");
            for (String aTo1 : aTo) {
                msg.addDestinationTO(aTo1);
            }
        }

        // Indirizzi multipli
        if (oCC.getText().length() > 0) {
            String[] aCC = StringToArray(oCC.getText(), ",");
            for (String aCC1 : aCC) {
                msg.addDestinationCC(aCC1);
            }
        }

        // Indirizzi multipli
        if (oBCC.getText().length() > 0) {
            String[] aBCC = StringToArray(oBCC.getText(), ",");
            for (String aBCC1 : aBCC) {
                msg.addDestinationBCC(aBCC1);
            }
        }

        // RelativeTimeOfExpiry
        if (oRelativeTimeofExpiry.getText().length() > 0) {
            try {
                msg.setRelativeTimeofExpiry(Double.valueOf(oRelativeTimeofExpiry.getText()).longValue());   //* Expire in one day
            } catch (NumberFormatException ee) {
                append("Expiry Error, set to default 1 day == " + ee.toString());
                msg.setRelativeTimeofExpiry(24 * 60 * 60);   //* Expire in one day
            }
        }

        // RelativeTimeOfExpiry
        if (oRelativeEarliestDeliveryTime.getText().length() > 0) {
            try {
                msg.setRelativeEarliestDeliveryTime(Double.valueOf(oRelativeEarliestDeliveryTime.getText()).longValue());   //* Expire in one day
            } catch (NumberFormatException ee) {
                append("Relative Earliest Delivery Time Error == " + ee.toString());
            }
        }

        // msg.setEarliestDeliveryTime(new Date());
        if (oEarliestDeliveryTime.getText().length() > 0) {
            try {
                msg.setEarliestDeliveryTime(new Date(Double.valueOf(oEarliestDeliveryTime.getText()).longValue()));   //* Expire in one day
            } catch (NumberFormatException ee) {
                append("Earliest Delivery Time Error == " + ee.toString());
            }
        }

        // oSubmissionTime
        if (oSubmissionTime.getText().length() > 0) {
            try {
                msg.setSubmissionTime(new Date(Double.valueOf(oSubmissionTime.getText()).longValue()));   //* Expire in one day
            } catch (NumberFormatException ee) {
                append("Submission Time Error == " + ee.toString());
            }
        }

        // oTimeofExpiry
        if (oTimeofExpiry.getText().length() > 0) {
            try {
                msg.setTimeofExpiry(new Date(Double.valueOf(oTimeofExpiry.getText()).longValue()));   //* Expire in one day
            } catch (NumberFormatException ee) {
                append("Time of expiry Error == " + ee.toString());
            }
        }

        // LinkID
        if (oLinkID.getText().length() > 0) {
            msg.setLinkID(oLinkID.getText());
        }

        // TransactionD
        if (oTransactionID.getText().length() > 0) {
            msg.setTransactionId(oTransactionID.getText());
        }

        // Priority
        String oItem = "" + oPriority.getSelectedItem();
        if (oItem.equalsIgnoreCase("normalPriority")) {
            msg.setPriority(MultiMediaMessage.normalPriority);
        } else if (oItem.equalsIgnoreCase("highPriority")) {
            msg.setPriority(MultiMediaMessage.highPriority);
        } else if (oItem.equalsIgnoreCase("lowPriority")) {
            msg.setPriority(MultiMediaMessage.lowPriority);
        }

        // Class
        String oItemC = "" + oMessageClass.getSelectedItem();
        if (oItemC.equalsIgnoreCase("advertisementClass")) {
            msg.setMessageClass(MultiMediaMessage.advertisementClass);
        } else if (oItemC.equalsIgnoreCase("informationalClass")) {
            msg.setMessageClass(MultiMediaMessage.informationalClass);
        } else if (oItemC.equalsIgnoreCase("personalClass")) {
            msg.setMessageClass(MultiMediaMessage.personalClass);
        }

        // Report Address
        msg.setReportAddress(oReportAddress.getText());   // Where to send reports to ..

        // Set from
        msg.setFrom(oFrom.getText());

        // Set Subject
        msg.setSubject(oSubject.getText());

        // Attach
        if (oAttach.getText().length() > 0) {
            String[] aAtt = StringToArray(oAttach.getText(), ",");
            for (String aAtt1 : aAtt) {
                msg.addAttachment(new File(aAtt1));
            }
        }

        // SMIL
        if (oSmil.getText().length() > 0) {
            msg.setSMIL(new File(oSmil.getText()));
        }

        // ServiceCode
        if (oServiceCode.getText().length() > 0) {
            msg.setServiceCode(oServiceCode.getText());
        }

        /*
         * Create an identification of the application
         */
        MultiMediaApplication mycon = new MultiMediaApplication();
        mycon.setUserName(oUser.getText());
        mycon.setPassword(oPassword.getText());
        mycon.setApplicationName(oApplicationName.getText());
        mycon.setApplicationProviderName(oApplicationProviderName.getText());

        try {

            /*
         * Create a MMC context
             */
            MultiMediaController msub = new MultiMediaController();

            /*
         * Submit the message to the MMC and process the response
             */
            MultiMediaSubmitResponse rsp;
            URL mmcURL = new URL(oMMCAddress.getText());

            try {
                rsp = msub.SubmitMsg(mmcURL, mycon, msg);
                /**
                 * Was the submission Succesfull ?
                 */
                if (rsp.isSuccess()) {
                    append("MMC Got Message ID = " + rsp.getMessageID());
                } else {
                    append("Error Encountered During Submission ["
                            + rsp.getSubmitResultCode() + "] "
                            + rsp.getSubmitResultDescription());
                }
            } catch (Exception ee) {
                append("Failure == " + ee.toString());
            }

        } catch (MalformedURLException ee) {
            append("Failure == " + ee.toString());
        }
        append("End sending message");
        append("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        if (oMMSFile != null) {
            if (JOptionPane.showConfirmDialog(this, "Save current message?") == JOptionPane.YES_OPTION) {
                jMenuItem2ActionPerformed(null);
            }
        }

        setVisible(false);
        dispose();
        System.exit(0);
    }//GEN-LAST:event_closeDialog

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        new JMMS(new javax.swing.JFrame(), true).show();
    }

    private String[] StringToArray(java.lang.String s, java.lang.String sep) {
        // convert a String s to an Array, the elements
        // are delimited by sep
        StringBuilder buf = new StringBuilder(s);
        int arraysize = 1;
        for (int i = 0; i < buf.length(); i++) {
            if (sep.indexOf(buf.charAt(i)) != -1) {
                arraysize++;
            }
        }
        String[] elements = new String[arraysize];
        int y, z = 0;
        if (buf.toString().contains(sep)) {
            while (buf.length() > 0) {
                if (buf.toString().contains(sep)) {
                    y = buf.toString().indexOf(sep);
                    if (y != buf.toString().lastIndexOf(sep)) {
                        elements[z] = buf.toString().substring(0, y);
                        z++;
                        buf.delete(0, y + 1);
                    } else if (buf.toString().lastIndexOf(sep) == y) {
                        elements[z] = buf.toString().substring(0, buf.toString().indexOf(sep));
                        z++;
                        buf.delete(0, buf.toString().indexOf(sep) + 1);
                        elements[z] = buf.toString();
                        z++;
                        buf.delete(0, buf.length());
                    }
                }
            }
        } else {
            elements[0] = buf.toString();
        }
        return elements;

    }

    /**
     *
     * @param s
     * @param sep
     * @return
     */
    public String ArrayToString(String s[], String sep) {
        int k;
        String result = "";

        k = s.length;
        if (k > 0) {
            result = s[0];
            for (int i = 1; i < k; i++) {
                result += sep + s[i];
            }
        }
        return result;
    }

    private void append(String cStr) {
        oLog.append(cStr + "\n"); //(char)13 + (char)10 );
    }

    private void setoCalendar(String cStr) {
        try {
            Calendar oCal = oCalendar.getCalendarModel().getCalendar();
            oCal.setTimeInMillis(Double.valueOf(cStr).longValue());
            oCalendar.getCalendarModel().setCalendar(oCal);
            oCalendar.setUseFullDayName(oCalendar.isUseFullDayName());
        } catch (NumberFormatException e) {
            Calendar oCal = oCalendar.getCalendarModel().getCalendar();
            oCal.setTimeInMillis(new Date().getTime());
            oCalendar.getCalendarModel().setCalendar(oCal);
            oCalendar.setUseFullDayName(oCalendar.isUseFullDayName());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox oAllowAdaptation;
    private javax.swing.JCheckBox oAllowCancel;
    private javax.swing.JCheckBox oAllowReverseCharging;
    private javax.swing.JCheckBox oAllowSenderVisibility;
    private javax.swing.JTextField oApplicationName;
    private javax.swing.JTextField oApplicationProviderName;
    private javax.swing.JTextField oAttach;
    private javax.swing.JTextField oBCC;
    private javax.swing.JTextField oCC;
    private com.margaglione.calendar.JCalendar oCalendar;
    private javax.swing.JCheckBox oDeliveryReport;
    private javax.swing.JTextField oEarliestDeliveryTime;
    private javax.swing.JTextField oFrom;
    private javax.swing.JTextField oLinkID;
    private javax.swing.JTextArea oLog;
    private javax.swing.JTextField oMMCAddress;
    private javax.swing.JComboBox oMessageClass;
    private javax.swing.JTextField oPassword;
    private javax.swing.JComboBox oPriority;
    private javax.swing.JCheckBox oReadReport;
    private javax.swing.JTextField oRelativeEarliestDeliveryTime;
    private javax.swing.JTextField oRelativeTimeofExpiry;
    private javax.swing.JTextField oReportAddress;
    private javax.swing.JTextField oServiceCode;
    private javax.swing.JTextField oSmil;
    private javax.swing.JTextField oSubject;
    private javax.swing.JTextField oSubmissionTime;
    private javax.swing.JTabbedPane oTab;
    private javax.swing.JTextArea oText;
    private javax.swing.JTextField oTimeofExpiry;
    private javax.swing.JTextField oTo;
    private javax.swing.JTextField oTransactionID;
    private javax.swing.JTextField oUser;
    // End of variables declaration//GEN-END:variables

}
